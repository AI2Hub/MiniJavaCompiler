const vmt_Test
  :Test.setval
  :Test.getval
  :Test.start
  :Test.next
  :Test.third

func Main[in 0, out 2, local 1]
  out[0] = 12
  out[1] = :vmt_Test
  call :ObjAlloc
  $t0 = $v0
  local[0] = $t0
  if $t0 goto :null1
    Error("null pointer")
  null1:
  $t0 = local[0]
  $t1 = [$t0+0]
  $t1 = [$t1+8]
  out[0] = $t0
  call $t1
  $t2 = $v0
  PrintIntS($t2)
  ret

func Test.setval[in 2, out 0, local 0]
  $t0 = in[0]
  $t1 = in[1]
  [$t0+8] = $t1
  $v0 = 0
  ret

func Test.getval[in 1, out 0, local 0]
  $t0 = in[0]
  $t1 = [$t0+8]
  $v0 = $t1
  ret

func Test.start[in 1, out 2, local 5]
  $t0 = in[0]
  $t1 = $t0
  in[0] = $t0
  local[0] = $t1
  out[0] = 12
  out[1] = :vmt_Test
  call :ObjAlloc
  $t2 = $v0
  $t1 = in[0]
  [$t1+4] = $t2
  [$t1+8] = 51
  $t2 = [$t1+4]
  $t0 = [$t1+4]
  in[0] = $t1
  local[1] = $t2
  if $t0 goto :null2
    Error("null pointer")
  null2:
  $t0 = in[0]
  $t2 = [$t0+4]
  $t1 = [$t2+0]
  $t1 = [$t1+0]
  $t2 = local[1]
  in[0] = $t0
  out[0] = $t2
  out[1] = 42
  call $t1
  $t3 = $v0
  $t2 = $t3
  $t2 = in[0]
  $t3 = [$t2+8]
  $t1 = local[0]
  in[0] = $t2
  local[2] = $t3
  local[0] = $t1
  if $t1 goto :null3
    Error("null pointer")
  null3:
  $t1 = local[0]
  $t3 = [$t1+0]
  $t3 = [$t3+16]
  $t2 = local[2]
  local[0] = $t1
  out[0] = $t1
  out[1] = $t2
  call $t3
  $t0 = $v0
  $t2 = local[0]
  local[3] = $t0
  local[0] = $t2
  if $t2 goto :null4
    Error("null pointer")
  null4:
  $t2 = local[0]
  $t0 = [$t2+0]
  $t0 = [$t0+12]
  $t3 = local[3]
  out[0] = $t2
  out[1] = $t3
  call $t0
  $t1 = $v0
  $t3 = in[0]
  [$t3+4] = $t1
  $t1 = [$t3+4]
  $t0 = [$t3+4]
  in[0] = $t3
  local[4] = $t1
  if $t0 goto :null5
    Error("null pointer")
  null5:
  $t0 = in[0]
  $t1 = [$t0+4]
  $t0 = [$t1+0]
  $t0 = [$t0+4]
  $t1 = local[4]
  out[0] = $t1
  call $t0
  $t3 = $v0
  $t1 = $t3
  $v0 = $t1
  ret

func Test.next[in 2, out 0, local 0]
  $t0 = in[0]
  $t1 = [$t0+4]
  $v0 = $t1
  ret

func Test.third[in 2, out 0, local 0]
  $t0 = in[0]
  [$t0+8] = 43
  $t1 = [$t0+4]
  $v0 = $t1
  ret

func ObjAlloc[in 2, out 0, local 0]
  $t0 = in[0]
  $t1 = HeapAllocZ($t0)
  $t0 = in[1]
  [$t1+0] = $t0
  $v0 = $t1
  ret
